{"version":3,"sources":["api/api.js","Components/Forms/editAnnouncement/editAnnouncement.js","Components/Announcement/announcement.js","Components/Announcement/announcementsList.js","Components/Forms/addAnnouncement/addAnnouncement.js","Components/Forms/searchAnnouncement/searchAnnouncement.js","Components/Forms/selectAnnouncement/selectAnnouncement.js","App.js","index.js"],"names":["BASE_URL","request","apiSection","postId","options","a","fetch","response","ok","Error","status","statusText","json","serverData","data","EditAnnouncement","props","body","id","handleChange","useState","editBody","setEditBody","isEdit","setIsEdit","className","type","onClick","method","deleteRequest","then","onSubmit","event","preventDefault","JSON","stringify","headers","patchRequest","rows","value","onChange","target","Announcement","title","createdAt","substring","AnnouncementList","announcements","map","announcement","callBack","AddAnnouncement","announcementBody","setAnnouncementBody","announcementTitle","setAnnouncementTitle","htmlFor","name","placeholder","SearchAnnouncement","searchInput","setSearchInput","handleFilter","handleGet","SelectAnnouncement","defaultValue","getAnnouncements","announcementsFromServer","App","setAnnouncements","initialAnnouncements","setInitialAnnouncements","announcementFromServer","filter","includes","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39fdc991.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com/posts';\nexport async function request(apiSection, postId, options) {\n  const response = await fetch(BASE_URL, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const serverData = await response.json();\n\n  return serverData.data;\n}\n\nexport const postRequest = (title, body) => fetch(BASE_URL, {\n  method: 'POST',\n  body: JSON.stringify({\n    title,\n    body,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n});\n\nexport const patchRequest = (body, id) => fetch(`${BASE_URL}/${id}`, {\n  method: 'PATCH',\n  body: JSON.stringify({\n    body,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n});\n\nexport const deleteRequest = id => fetch(`${BASE_URL}/${id}`, {\n  method: 'DELETE',\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteRequest, patchRequest } from '../../../api/api';\nimport './editAnnouncement.scss';\n\nexport const EditAnnouncement = (props) => {\n  const { body, id, handleChange } = props;\n  const [editBody, setEditBody] = useState(body);\n  const [isEdit, setIsEdit] = useState(false);\n\n  return (\n    <>\n      <div className=\"ui three bottom attached buttons\">\n        <button\n          className=\"ui black button\"\n          type=\"button\"\n          onClick={() => setIsEdit(!isEdit)}\n        >\n          {!isEdit\n            ? 'Edit announcement'\n            : 'Hide edit panel'\n          }\n        </button>\n        <button\n          className=\"ui red button\"\n          type=\"button\"\n          onClick={() => deleteRequest(id)\n            .then(handleChange)}\n        >\n          Delete\n        </button>\n      </div>\n      {isEdit && (\n        <form\n          className=\"ui form success\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            patchRequest(editBody, id)\n              .then(handleChange);\n          }}\n        >\n          <div className=\"field\">\n            <textarea\n              type=\"text\"\n              rows=\"4\"\n              value={editBody}\n              onChange={\n                event => setEditBody(event.target.value)\n              }\n            />\n          </div>\n          <button className=\"ui submit button\" type=\"submit\">Submit</button>\n        </form>\n      )}\n    </>\n  );\n};\n\nEditAnnouncement.propTypes = {\n  body: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EditAnnouncement } from '../Forms/editAnnouncement';\nimport './announcement.scss';\n\nexport const Announcement = (props) => {\n  const { title, body, createdAt } = props;\n\n  return (\n    <>\n      <div className=\"header\">{title}</div>\n      <p>{body}</p>\n      <p>{createdAt.substring(0, 10)}</p>\n      <EditAnnouncement {...props} />\n    </>\n  );\n};\n\nAnnouncement.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  createdAt: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Announcement } from './announcement';\nimport './announcement.scss';\n\nexport const AnnouncementList = (props) => {\n  const { announcements } = props;\n\n  return (\n    <>\n      <ul>\n        {announcements.map(\n          announcement => (\n            <li className=\"ui floating message\" key={announcement.id}>\n              <Announcement\n                {...announcement}\n                handleChange={props.handleChange}\n              />\n            </li>\n          ),\n        )}\n      </ul>\n    </>\n  );\n};\n\nAnnouncementList.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  announcements: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { postRequest } from '../../../api/api';\nimport './addAnnuncement.scss';\n\nconst handleChange = (event, callBack) => {\n  callBack(event.target.value);\n};\n\nexport const AddAnnouncement = (props) => {\n  const [announcementBody, setAnnouncementBody] = useState('');\n  const [announcementTitle, setAnnouncementTitle] = useState('');\n\n  return (\n    <form\n      className=\"ui form attached fluid message announcementForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        postRequest(announcementTitle, announcementBody)\n          .then(props.handleChange);\n        setAnnouncementBody('');\n        setAnnouncementTitle('');\n      }}\n    >\n      <div className=\"header aligned center\">\n        Add new announcement\n      </div>\n      <label htmlFor=\"title\">\n        Title\n        <input\n          name=\"title\"\n          className=\"field\"\n          placeholder=\"Enter title for announcement\"\n          value={announcementTitle}\n          onChange={event => handleChange(event, setAnnouncementTitle)}\n        />\n      </label>\n      <label htmlFor=\"body\">\n        Text\n        <textarea\n          name=\"body\"\n          className=\"field\"\n          value={announcementBody}\n          placeholder=\"Enter some description\"\n          onChange={event => handleChange(event, setAnnouncementBody)}\n        />\n      </label>\n      <div className=\"ui two bottom buttons\">\n        <button type=\"submit\" className=\"floated ui secondary button\">\n          Save\n        </button>\n        <button\n          className=\"floated ui button\"\n          type=\"button\"\n          onClick={() => {\n            setAnnouncementBody('');\n            setAnnouncementTitle('');\n          }}\n        >\n          Abort\n        </button>\n      </div>\n    </form>\n  );\n};\n\nAddAnnouncement.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './searchAnnouncement.scss';\n\nexport const SearchAnnouncement = (props) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  return (\n    <form\n      className=\"ui search searchAnnouncement\"\n      onSubmit={\n        (event) => {\n          event.preventDefault();\n          props.handleFilter(searchInput);\n        }\n      }\n    >\n      <div className=\"ui icon input\">\n        <input\n          className=\"prompt\"\n          type=\"text\"\n          placeholder=\"Search announcement...\"\n          value={searchInput}\n          onChange={\n            event => setSearchInput(event.target.value)\n          }\n        />\n        <i className=\"search icon\" />\n      </div>\n      <div className=\"results\" />\n      <button\n        type=\"submit\"\n        className=\"ui secondary button searchAnnouncement__button\"\n      >\n        Okay\n      </button>\n      <button\n        type=\"button\"\n        className=\"ui red button searchAnnouncement__button\"\n        onClick={() => {\n          setSearchInput('');\n          props.handleGet();\n        }}\n      >\n        Reset\n      </button>\n    </form>\n  );\n};\n\nSearchAnnouncement.propTypes = {\n  handleGet: PropTypes.func.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './selectAnnouncement.scss';\n\nexport const SelectAnnouncement = props => (\n  <div className=\"ui form selectAnnouncement\">\n    <div className=\"field\">\n      <select\n        onChange={(event) => {\n          props.handleFilter(event.target.value);\n        }}\n      >\n        <option\n          value=\"default\"\n          defaultValue=\"default\"\n        >\n          Choose announcement\n        </option>\n        {props.announcements.map(announcement => <option\n            value={announcement.id}\n            key={announcement.id}\n        >\n            {announcement.title}\n          </option>)\n        }\n      </select>\n    </div>\n  </div>\n);\n\nSelectAnnouncement.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n  announcements: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\n\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { request } from './api/api';\nimport { AnnouncementList } from './Components/Announcement/announcementsList';\nimport { AddAnnouncement } from './Components/Forms/addAnnouncement';\nimport { SearchAnnouncement } from './Components/Forms/searchAnnouncement';\nimport { SelectAnnouncement }\n  from './Components/Forms/selectAnnouncement/selectAnnouncement';\n\nconst apiSection = 'posts';\n\nasync function getAnnouncements() {\n  const announcementsFromServer = await request(apiSection, { method: 'GET' });\n\n  return announcementsFromServer;\n}\n\nconst App = () => {\n  const [announcements, setAnnouncements] = useState([]);\n  const [initialAnnouncements, setInitialAnnouncements] = useState([]);\n\n  const handleChange = () => {\n    getAnnouncements()\n      .then(\n        announcementFromServer => setAnnouncements(announcementFromServer),\n      );\n  };\n\n  const handleFilter = (value) => {\n    getAnnouncements()\n      .then(\n        (announcementFromServer) => {\n          value !== 'default'\n            ? setAnnouncements(announcementFromServer\n              .filter(announcement => announcement.title.includes(value)\n                || announcement.title.includes(value)\n              //    eslint-disable-next-line\n                || announcement.id == value))\n            : setAnnouncements(announcementFromServer);\n        },\n      );\n  };\n\n  useEffect(() => getAnnouncements()\n    .then(\n      (announcementFromServer) => {\n        setInitialAnnouncements(announcementFromServer);\n\n        return setAnnouncements(announcementFromServer);\n      },\n    ), []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__row\">\n        <SelectAnnouncement\n          announcements={initialAnnouncements}\n          handleFilter={handleFilter}\n        />\n        <SearchAnnouncement\n          handleFilter={handleFilter}\n          handleGet={handleChange}\n        />\n      </div>\n      <div className=\"App__body\">\n        <AnnouncementList\n          announcements={announcements}\n          handleChange={handleChange}\n        />\n        <AddAnnouncement\n          handleChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}